name: FMI4cpp CI

on: [ push, workflow_dispatch ]

jobs:
  conan-on-linux:

    runs-on: ${{ matrix.os }}
    env:
      CC: gcc-${{ matrix.compiler_version }}
      CXX: g++-${{ matrix.compiler_version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04 ]
        compiler_version: [ 7, 9 ]

    steps:
      - uses: actions/checkout@v2

      - name: Install prerequisites
        run: |
          sudo pip3 install --upgrade setuptools pip
          sudo pip3 install conan

      - name: Run conan
        run: |
          conan install . -s build_type=Release -s compiler.version=${{ matrix.compiler_version }} -s compiler.libcxx=libstdc++11 --install-folder=build

      - name: Configure and build
        run: |
          cmake -H. -Bbuild -DFMI4CPP_USING_CONAN=TRUE -DFMI4CPP_BUILD_TESTS=ON -DFMI4CPP_BUILD_EXAMPLES=ON
          cmake --build build

      - name: Test
        run: |
          cd build/tests && ctest


  conan-on-windows:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2019 ]

    steps:
      - uses: actions/checkout@v2

      - name: Install prerequisites
        run: |
          pip3 install conan
        shell: bash

      - name: Run conan
        run: |
          conan install . -s build_type=Release --install-folder=build -b missing
        shell: bash

      - name: Configure and build
        run: |
          cmake . -B build -A x64 -DFMI4CPP_USING_CONAN=TRUE -DFMI4CPP_BUILD_TESTS=ON -DFMI4CPP_BUILD_EXAMPLES=ON
          cmake --build build --config Release
        shell: bash

      - name: Test
        run: |
          cd build/tests && ctest -C Release
        shell: bash

  cmake-on-linux:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04 ]

    steps:
      - uses: actions/checkout@v2

      - name: Install prerequisites
        run: |
          sudo apt-get install -y --no-install-recommends \
          gcc g++ cmake libzip-dev

      - name: Configure and build
        run: |
          cmake . -B build -DFMI4CPP_BUILD_TESTS=ON -DFMI4CPP_BUILD_EXAMPLES=ON
          cmake --build build

      - name: Test
        run: |
          cd build/tests && ctest
